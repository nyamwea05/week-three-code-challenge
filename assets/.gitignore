node_modules
    document.addEventListener('DOMContentLoaded', (e) => {
        e.preventDefault();
        
        fetchFilms();
    });

    // Fetch films from db.json then display/render them on our html
    function fetchFilms() {
        fetch(`${BASE_URL}/films`, {
            method: 'GET',
            headers,
        })
        .then((res) => res.json())
        .then(renderFilms)
        .catch((err) => {
            console.log(err);
        });
    }

    // Attach or render films on the html
    function renderFilms(films) {
        const listFilmsDiv = document.getElementById('list-films');

        films.forEach((film) => {
            // Create a new div element for each film
            const card = document.createElement('div');
            card.innerText = film.title;
            card.classList.add('list-film-item');

            // Add an onclick listener
            card.addEventListener('click', () => {
                renderFilmDetails(film);
            });

            // Append each new card to the listFilmsDiv
            listFilmsDiv.appendChild(card);
        });
    }

    // Render one film on the html
    async function renderFilmDetails(passedFilm) {
        const response = await fetch(
            `${BASE_URL}/films/${passedFilm.id}`,
            {
                method: 'GET',
                headers,
            }
        );

        const film = await response.json();

        const filmDetailsDiv = document.getElementById('film-details');

        // Reset film details div
        filmDetailsDiv.innerHTML = '';

        // Title element
        const titleParagraph = document.createElement('p');
        titleParagraph.innerText = `Title: ${film.title}`;

        // Runtime element
        const runtimeParagraph = document.createElement('p');
        runtimeParagraph.innerText = `Runtime: ${film.runtime} minutes`;

        // Description element
        const descriptionParagraph = document.createElement('p');
        descriptionParagraph.innerText = `Description: ${film.description}`;

        // Poster element
        const posterElement = document.createElement('img');
        posterElement.src = film.poster;
        posterElement.classList.add('film-poster');

        // Capacity element
        const capacityParagraph = document.createElement('p');
        capacityParagraph.innerText = `Capacity: ${film.capacity}`;

        // Showtime element
        const showtimeParagraph = document.createElement('p');
        showtimeParagraph.innerText = `Showtime: ${film.showtime}`;

        // Tickets sold element
        const ticketsSoldParagraph = document.createElement('p');
        ticketsSoldParagraph.innerText = `Tickets sold: ${film.tickets_sold}`;

        // Add tickets button
        const addTicketsButton = document.createElement('button');
        addTicketsButton.innerText = 'Add tickets';
        addTicketsButton.type = 'button';

        addTicketsButton.addEventListener('click', (e) => {
            e.preventDefault();

            // Add one ticket to existing tickets sold
            film.tickets_sold = film.tickets_sold += 1;

            updateFilmTickets(film);
        });




/* Styling for film list */
#list-films {
  display: flex;
  flex-wrap: wrap;
  justify-content: space-between;
  gap: 20px;
}

.list-film-item {
  background-color: #f2f2f2;
  border: 1px solid #d9d9d9;
  border-radius: 5px;
  cursor: pointer;
  width: 200px;
  height: 200px;
  padding: 10px;
  display: flex;
  justify-content: center;
  align-items: center;
  font-size: 1.2rem;
}

/* Styling for film details */
#film-details {
  margin-top: 20px;
  padding: 20px;
  background-color: #f2f2f2;
  border: 1px solid #d9d9d9;
  border-radius: 5px;
}

.film-poster {
  max-width: 100%;
  height: auto;
  margin-bottom: 10px;
}

button {
  background-color: #4CAF50;
  color: white;
  border: none;
  border-radius: 5px;
  cursor: pointer;
  font-size: 1.2rem;
  margin-right: 10px;
  margin-bottom: 10px;
}

button:hover {
  background-color: #3e8e41;
}



body {
  font-family: Arial, sans-serif;
  background-color: #f7f7f7;
}

/* Style headings */
h1, h2, h3, h4, h5, h6 {
  font-weight: bold;
  margin-top: 1.5em;
  margin-bottom: 0.5em;